{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SummaryPipe {\n  transform(content, characterCount) {\n    if (content.length <= characterCount) {\n      return content;\n    } else {\n      return `${content.substring(0, characterCount)}...`;\n    }\n  }\n}\nSummaryPipe.ɵfac = function SummaryPipe_Factory(t) {\n  return new (t || SummaryPipe)();\n};\nSummaryPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"summary\",\n  type: SummaryPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,SAAS,CAACC,OAAe,EAAEC,cAAsB;IAC/C,IAAGD,OAAO,CAACE,MAAM,IAAID,cAAc,EAAC;MACxC,OAAOD,OAAO;KACT,MAED;MACE,OAAO,GAAGA,OAAO,CAACG,SAAS,CAAC,CAAC,EAAEF,cAAc,CAAC,KAAK;;EAEvD;;AAVWH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;;QAAXA,WAAW;EAAAM;AAAA","names":["SummaryPipe","transform","content","characterCount","length","substring","pure"],"sourceRoot":"","sources":["C:\\Repos\\BlogNetCoreAngular\\BlogAngular\\src\\app\\pipes\\summary.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'summary'\n})\nexport class SummaryPipe implements PipeTransform {\n\n  transform(content: string, characterCount: number): string {\n    if(content.length <= characterCount){\nreturn content;\n    }\n    else\n    {\n      return `${content.substring(0, characterCount)}...`\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}